{"version":3,"file":"Home-Co8vqGEh.js","sources":["../../../../frontend/node_modules/frappe-ui/src/data-fetching/utils.ts","../../../../frontend/node_modules/frappe-ui/src/data-fetching/useCall/useCall.ts","../../../../frontend/node_modules/frappe-ui/src/data-fetching/useList/useList.ts","../../../../frontend/src/pages/Home.vue"],"sourcesContent":["import { MaybeRef, toValue, MaybeRefOrGetter } from 'vue'\nimport { Filters } from './useList/types'\n\nexport function makeGetParams(params: Record<string, any>) {\n  let url = new URLSearchParams()\n  for (let key in params) {\n    let value = params[key]\n    if (value != null && !isEmptyObject(value)) {\n      url.append(key, value)\n    }\n  }\n  return url.toString()\n}\n\nexport function isEmptyObject(obj: any) {\n  return Object.keys(obj).length === 0 && obj.constructor === Object\n}\n\nexport function parseFilters(\n  _filters: MaybeRefOrGetter<Filters>,\n): Filters | null {\n  let filters = typeof _filters == 'function' ? _filters() : toValue(_filters)\n  let parsedFilters: Filters = {}\n  for (let key in filters) {\n    let value = filters[key]\n    if (Array.isArray(value)) {\n      let [operator, actualValue] = value\n      operator = toValue(operator)\n      actualValue = toValue(actualValue)\n      if (operator === 'like') {\n        if (typeof actualValue != 'string') {\n          actualValue = String(actualValue)\n        }\n        if (actualValue == null || actualValue == '') {\n          continue\n        }\n        if (!actualValue.includes('%')) {\n          actualValue = `%${actualValue}%`\n        }\n      }\n      parsedFilters[key] = [operator, actualValue]\n    } else {\n      parsedFilters[key] = toValue(value)\n    }\n  }\n  if (isEmptyObject(parsedFilters)) {\n    return null\n  }\n  return parsedFilters\n}\n\nexport function unrefObject(\n  obj: Record<string, MaybeRef<string | number | boolean>>,\n) {\n  let newObj: Record<keyof typeof obj, any> = {}\n  for (let key in obj) {\n    newObj[key] = toValue(obj[key])\n  }\n  return newObj\n}\n\nexport function normalizeCacheKey(\n  cacheKey: string | Array<string | number | boolean | object> | undefined,\n  prefix?: string,\n) {\n  if (!cacheKey) {\n    return null\n  }\n  if (typeof cacheKey === 'string') {\n    cacheKey = [cacheKey]\n  }\n  if (prefix) {\n    cacheKey = [prefix, ...cacheKey]\n  }\n  return JSON.stringify(cacheKey)\n}\n","import { computed, reactive, readonly, ref, unref } from 'vue'\nimport { AfterFetchContext, UseFetchOptions } from '@vueuse/core'\nimport { useFrappeFetch } from '../useFrappeFetch'\nimport { unrefObject, makeGetParams, normalizeCacheKey } from '../utils'\nimport { idbStore } from '../idbStore'\nimport { BasicParams, UseCallOptions } from './types'\n\nexport function useCall<TResponse, TParams extends BasicParams = undefined>(\n  options: UseCallOptions<TResponse, TParams>,\n) {\n  const {\n    url,\n    method = 'GET',\n    params,\n    immediate = true,\n    refetch = false,\n    baseUrl = '',\n    initialData,\n    cacheKey,\n    transform,\n    beforeSubmit,\n    onSuccess,\n    onError,\n  } = options\n\n  let submitParams = ref<TParams | null | undefined>(null)\n\n  let resolve: (value?: any) => void\n  let reject: (reason?: any) => void\n  let makePromise = () =>\n    new Promise((res, rej) => {\n      resolve = res\n      reject = rej\n    })\n  let promise = ref<Promise<any>>(makePromise())\n\n  const computedParams = computed(() => {\n    let out\n    if (submitParams.value) {\n      out = submitParams.value\n    } else if (typeof params === 'function') {\n      out = params()\n    } else {\n      out = params\n    }\n    if (out === undefined) {\n      return {}\n    }\n    return unrefObject(out)\n  })\n\n  const computedUrl = computed(() => {\n    const base = `${baseUrl}${unref(url)}`\n    if (method === 'GET' && computedParams.value) {\n      return `${base}?${makeGetParams(computedParams.value)}`\n    }\n    return base\n  })\n\n  type FrappeResponse<T> = { data: T }\n\n  const fetchOptions: UseFetchOptions = {\n    immediate,\n    refetch,\n    initialData,\n    afterFetch(ctx: AfterFetchContext<FrappeResponse<TResponse>>) {\n      if (ctx.data) {\n        if (transform) {\n          let returnValue = transform(ctx.data.data)\n          if (returnValue !== undefined) {\n            ctx.data.data = returnValue\n          }\n        }\n\n        let normalizedCacheKey = normalizeCacheKey(cacheKey, 'useCall')\n        if (normalizedCacheKey) {\n          idbStore.set(normalizedCacheKey, ctx.data.data)\n        }\n\n        if (onSuccess) {\n          try {\n            onSuccess(ctx.data.data)\n          } catch (e) {\n            console.error('Error in onSuccess hook:', e)\n          }\n        }\n      }\n      return ctx\n    },\n    onFetchError(ctx) {\n      if (onError) {\n        try {\n          onError(ctx.error)\n        } catch (e) {\n          console.error('Error in onError hook:', e)\n        }\n      }\n      return ctx\n    },\n  }\n\n  let result\n  if (method === 'POST') {\n    result = useFrappeFetch<FrappeResponse<TResponse>>(\n      computedUrl,\n      fetchOptions,\n    ).post(computedParams)\n  } else if (method === 'PUT') {\n    result = useFrappeFetch<FrappeResponse<TResponse>>(\n      computedUrl,\n      fetchOptions,\n    ).put(computedParams)\n  } else if (method === 'DELETE') {\n    result = useFrappeFetch<FrappeResponse<TResponse>>(\n      computedUrl,\n      fetchOptions,\n    ).delete(computedParams)\n  } else {\n    result = useFrappeFetch<FrappeResponse<TResponse>>(\n      computedUrl,\n      fetchOptions,\n    ).get()\n  }\n\n  const {\n    data,\n    error,\n    isFetching,\n    isFinished,\n    canAbort,\n    aborted,\n    abort,\n    execute: _execute,\n    onFetchResponse,\n    onFetchError,\n  } = result\n\n  function execute(): Promise<TResponse | null> {\n    return _execute().then((r) => data.value?.data ?? null)\n  }\n\n  onFetchResponse(() => {\n    resolve()\n    promise.value = makePromise()\n  })\n\n  onFetchError((error) => {\n    resolve()\n    promise.value = makePromise()\n  })\n\n  let beforeSubmitError = ref<Error | null>(null)\n\n  const submit = async (params?: TParams) => {\n    if (beforeSubmit) {\n      beforeSubmitError.value = null\n      try {\n        await beforeSubmit(params)\n      } catch (e) {\n        console.error('Error in beforeSubmit hook:', e)\n        beforeSubmitError.value = e as Error\n      }\n    }\n    if (params != null) {\n      submitParams.value = params\n    }\n    if (!refetch) {\n      return execute()\n    }\n  }\n\n  const reset = () => {\n    submitParams.value = null\n  }\n\n  let normalizedCacheKey = normalizeCacheKey(cacheKey, 'useCall')\n  let cachedResponse = ref<TResponse | null>(null)\n\n  const _data = computed(() => {\n    if (normalizedCacheKey && (out.loading || !out.isFinished)) {\n      let cachedData = cachedResponse.value as TResponse\n      if (transform) {\n        let returnValue = transform(cachedData)\n        if (returnValue !== undefined) {\n          cachedData = returnValue\n        }\n      }\n      return cachedData\n    }\n    return data.value?.data ?? null\n  })\n\n  if (normalizedCacheKey) {\n    idbStore.get(normalizedCacheKey).then((data) => {\n      if (data) {\n        cachedResponse.value = data\n      }\n    })\n  }\n\n  let out = reactive({\n    data: _data,\n    error: readonly(beforeSubmitError.value ? beforeSubmitError : error),\n    loading: isFetching,\n    isFetching,\n    isFinished,\n    canAbort,\n    aborted,\n    url: computedUrl,\n    params: computedParams,\n    promise,\n    abort,\n    execute: execute,\n    fetch: execute,\n    reload: execute,\n    reset,\n    submit,\n  })\n\n  return out as Omit<typeof out, 'submit'> & {\n    submit: TParams extends undefined\n      ? (params?: never) => Promise<void>\n      : (params: TParams) => Promise<void>\n  }\n}\n","import {\n  computed,\n  MaybeRefOrGetter,\n  reactive,\n  readonly,\n  Ref,\n  ref,\n  toValue,\n} from 'vue'\nimport {\n  AfterFetchContext,\n  OnFetchErrorContext,\n  UseFetchOptions,\n} from '@vueuse/core'\nimport { useFrappeFetch } from '../useFrappeFetch'\nimport { useCall } from '../useCall/useCall'\nimport { parseFilters, makeGetParams, normalizeCacheKey } from '../utils'\nimport { UseListOptions, UseListResponse } from './types'\nimport { idbStore } from '../idbStore'\nimport { listStore } from './listStore'\nimport { docStore } from '../docStore'\n\nexport function useList<T extends { name: string }>(\n  options: UseListOptions<T>,\n) {\n  const {\n    doctype,\n    fields,\n    filters,\n    orderBy,\n    start,\n    limit,\n    groupBy,\n    parent,\n    debug,\n    initialData,\n    immediate = true,\n    refetch = true,\n    cacheKey,\n    baseUrl = '',\n    url = '',\n    transform,\n  } = options\n\n  const _start = ref(start || 0)\n  const _limit = ref(limit || 20)\n\n  const _url = computed(() => {\n    const parsedFilters = filters ? parseFilters(filters) : null\n    const _fields = fields ? toValue(fields) : []\n    const params = makeGetParams({\n      fields: _fields.length ? JSON.stringify(_fields) : null,\n      filters: parsedFilters ? JSON.stringify(parsedFilters) : null,\n      order_by: toValue(orderBy),\n      start: _start.value,\n      limit: _limit.value,\n      group_by: groupBy,\n      parent: parent,\n      debug: debug,\n    })\n    if (url) {\n      return `${baseUrl}${url}?${params}`\n    }\n    return `${baseUrl}/api/document/${doctype}?${params}`\n  })\n\n  const allData: Ref<T[] | null> = ref(null)\n  const hasNextPage = ref(true)\n  const hasPreviousPage = computed(() => _start.value > 0)\n\n  const fetchOptions: UseFetchOptions = {\n    immediate,\n    refetch,\n    initialData: initialData || null,\n    afterFetch: handleAfterFetch<T>({\n      ...options,\n      allData,\n      _start,\n      _limit,\n      hasNextPage,\n    }),\n    onFetchError: handleFetchError<T>(options),\n  }\n\n  const {\n    data,\n    error,\n    isFetching,\n    isFinished,\n    canAbort,\n    aborted,\n    abort,\n    execute,\n  } = useFrappeFetch<UseListResponse<T>>(_url, fetchOptions).get()\n\n  let normalizedCacheKey = normalizeCacheKey(cacheKey, 'useList')\n  let cachedResponse = ref<UseListResponse<T> | null>(null)\n\n  const result = computed(() => {\n    if (normalizedCacheKey && (out.loading || !out.isFinished)) {\n      let data = cachedResponse.value\n      if (data) {\n        if (transform) {\n          let returnValue = transform(data as T[])\n          if (returnValue !== undefined) {\n            return returnValue\n          }\n        }\n        return data\n      }\n    }\n    return allData.value\n  })\n\n  if (normalizedCacheKey) {\n    idbStore.get(normalizedCacheKey).then((data) => {\n      if (data) {\n        cachedResponse.value = data as UseListResponse<T>\n      }\n    })\n  }\n\n  const next = () => {\n    _start.value += _limit.value\n    if (!refetch) execute()\n  }\n\n  const previous = () => {\n    _start.value = Math.max(0, _start.value - _limit.value)\n    if (!refetch) execute()\n  }\n\n  const updateRow = (\n    doc: Partial<{ name: string }> & Record<string, unknown>,\n  ) => {\n    if (allData.value == null) return\n    let changed = false\n    for (let row of allData.value) {\n      if (doc.name && doc.name === row.name) {\n        for (let key in doc) {\n          if (key in row && doc[key] !== undefined) {\n            ;(row as Record<string, unknown>)[key] = doc[key]\n            changed = true\n          }\n        }\n        break\n      }\n    }\n    if (changed) {\n      allData.value = [...allData.value]\n    }\n  }\n\n  const removeRow = (name: string) => {\n    if (allData.value == null) return\n    const index = allData.value.findIndex((row) => row.name === name)\n    if (index > -1) {\n      allData.value.splice(index, 1)\n      allData.value = [...allData.value]\n    }\n  }\n\n  const insert = useCall<T, Partial<T>>({\n    url: `/api/document/${doctype}`,\n    method: 'POST',\n    immediate: false,\n    refetch: false,\n    onSuccess() {\n      if (refetch) execute()\n    },\n  })\n\n  const setValueUrl = ref(`/api/v2/document/${doctype}/<name>`)\n\n  const setValue = useCall<T, Partial<T>>({\n    url: setValueUrl,\n    method: 'PUT',\n    baseUrl,\n    immediate: false,\n    refetch: false,\n    beforeSubmit(params) {\n      if (params?.name) {\n        setValueUrl.value = `/api/v2/document/${doctype}/${params.name}`\n      }\n    },\n    onSuccess(data) {\n      docStore.setDoc({ doctype, ...data })\n      listStore.updateRow(doctype, data)\n      if (refetch) execute()\n    },\n  })\n\n  let deleteUrl = ref(`/api/v2/document/${doctype}/<name>`)\n  type DeleteResponse = 'ok'\n  type DeleteParams = { name: string }\n  const delete_ = useCall<DeleteResponse, DeleteParams>({\n    url: deleteUrl,\n    method: 'DELETE',\n    immediate: false,\n    refetch: false,\n    beforeSubmit(params) {\n      if (params?.name) {\n        deleteUrl.value = `/api/v2/document/${doctype}/${params.name}`\n      }\n    },\n    onSuccess() {\n      if (refetch) {\n        execute()\n      }\n      if (delete_.params.name) {\n        let { name } = delete_.params\n        docStore.removeDoc(doctype, name)\n        listStore.removeRow(doctype, name)\n      }\n    },\n  })\n\n  let out = reactive({\n    data: result,\n    hasNextPage: readonly(hasNextPage),\n    hasPreviousPage,\n    start: readonly(_start),\n    limit: readonly(_limit),\n    error: readonly(error),\n    loading: isFetching,\n    isFetching,\n    isFinished,\n    canAbort,\n    aborted,\n    url: _url,\n    abort,\n    next,\n    previous,\n    execute,\n    fetch: execute,\n    reload: execute,\n    updateRow,\n    removeRow,\n    insert,\n    setValue,\n    delete: delete_,\n  })\n\n  listStore.addList(doctype, out)\n\n  return out\n}\n\nfunction handleAfterFetch<T extends { name: string }>({\n  transform,\n  onSuccess,\n  cacheKey,\n  allData,\n  _start,\n  _limit,\n  hasNextPage,\n}: UseListOptions<T> & {\n  allData: Ref<T[] | null>\n  _start: Ref<number>\n  _limit: Ref<number>\n  hasNextPage: Ref<boolean>\n}) {\n  return function (\n    ctx: AfterFetchContext<{\n      data: UseListResponse<T>\n      has_next_page: boolean\n    }>,\n  ) {\n    if (ctx.data) {\n      let resultData = ctx.data.data\n      if (resultData[0]?.name) {\n        for (let row of resultData) {\n          row.name = String(row.name)\n        }\n      }\n      if (ctx.data.has_next_page != null) {\n        hasNextPage.value = ctx.data.has_next_page\n      } else {\n        hasNextPage.value = resultData.length < _limit.value ? false : true\n      }\n      if (transform) {\n        const returnValue = transform(resultData)\n        if (Array.isArray(returnValue)) {\n          resultData = returnValue\n        }\n      }\n\n      if (_start.value === 0) {\n        allData.value = resultData\n      } else {\n        allData.value = [...(allData.value || []), ...resultData]\n      }\n      ctx.data.data = allData.value\n\n      let normalizedCacheKey = normalizeCacheKey(cacheKey, 'useList')\n      if (normalizedCacheKey) {\n        idbStore.set(normalizedCacheKey, ctx.data.data)\n      }\n      if (onSuccess) {\n        try {\n          onSuccess(allData.value)\n        } catch (e) {\n          console.error('Error in onSuccess hook:', e)\n        }\n      }\n    }\n\n    return ctx\n  } as UseFetchOptions['afterFetch']\n}\n\nfunction handleFetchError<T>({ onError }: UseListOptions<T>) {\n  return function (ctx: OnFetchErrorContext) {\n    if (onError) {\n      try {\n        onError(ctx.error)\n      } catch (e) {\n        console.error('Error in onError hook:', e)\n      }\n    }\n    return ctx\n  } as UseFetchOptions['onFetchError']\n}\n","<template>\n  <div class=\"max-w-3xl py-12 mx-auto\">\n    <pre v-if = \"wwo\">\n      {{ JSON.stringify(wwo.list.data, null, 2) }}\n    </pre>\n  </div>\n</template>\n\n<script setup>\nimport {useList} from \"frappe-ui\"\nconst wwo = useList({\n  doctype: \"wwo-plan\",\n  fields: [\"name\", \"items\"],\n  filters: [\n   \n  ],\n  sort_by: \"modified\",\n  sort_order: \"desc\",\n  limit_page_length: 10,\n  refetch :true\n})\n\nwwo.fetch()\nconsole.log(wwo.data)\n</script>\n"],"names":["makeGetParams","params","url","key","value","isEmptyObject","obj","parseFilters","_filters","filters","toValue","parsedFilters","operator","actualValue","unrefObject","newObj","normalizeCacheKey","cacheKey","prefix","useCall","options","method","immediate","refetch","baseUrl","initialData","transform","beforeSubmit","onSuccess","onError","submitParams","ref","resolve","makePromise","res","rej","promise","computedParams","computed","out","computedUrl","base","unref","fetchOptions","ctx","returnValue","normalizedCacheKey","idbStore","e","result","useFrappeFetch","data","error","isFetching","isFinished","canAbort","aborted","abort","_execute","onFetchResponse","onFetchError","execute","r","_b","_a","beforeSubmitError","submit","__async","reset","cachedResponse","_data","cachedData","reactive","readonly","useList","doctype","fields","orderBy","start","limit","groupBy","parent","debug","_start","_limit","_url","_fields","allData","hasNextPage","hasPreviousPage","handleAfterFetch","__spreadProps","__spreadValues","handleFetchError","next","previous","updateRow","doc","changed","row","removeRow","name","index","insert","setValueUrl","setValue","docStore","listStore","deleteUrl","delete_","resultData","wwo","_openBlock","_createElementBlock","_hoisted_1","_unref","_hoisted_2","_toDisplayString"],"mappings":"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","x_google_ignoreList":[0,1,2]}